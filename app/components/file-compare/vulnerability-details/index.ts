import Component from '@glimmer/component';
import { action } from '@ember/object';
import { inject as service } from '@ember/service';
import Store from '@ember-data/store';
import IntlService from 'ember-intl/services/intl';
import { tracked } from '@glimmer/tracking';

import FileModel from 'irene/models/file';
import VulnerabilityModel from 'irene/models/vulnerability';
import { getComputedRiskCategory } from 'irene/utils/compare-files';
import { scrollDashboardMainContainerTo } from 'irene/utils/scroll-to-top';

interface FileCompareVulnerabilityDetailsSignature {
  Args: {
    file1: FileModel | null;
    file2: FileModel | null;
    vulnerability: VulnerabilityModel | null;
  };
}

export default class FileCompareVulnerabilityDetailsComponent extends Component<FileCompareVulnerabilityDetailsSignature> {
  @service declare store: Store;
  @service declare intl: IntlService;

  @tracked expandFilesOverview = false;

  get file1() {
    return this.args.file1;
  }

  get vulnerabilityId() {
    return this.args.vulnerability?.id;
  }

  get file2() {
    return this.args.file2;
  }

  get file1Analysis() {
    return this.file1?.analyses.find(
      (analysis) => analysis.vulnerability.get('id') === this.vulnerabilityId
    );
  }
  get file2Analysis() {
    return this.file2?.analyses.find(
      (analysis) => analysis.vulnerability.get('id') === this.vulnerabilityId
    );
  }

  get analysisStatus() {
    const category = getComputedRiskCategory(
      Number(this.file1Analysis?.computedRisk),
      Number(this.file2Analysis?.computedRisk)
    );

    if (category.newRisk) {
      return 'New';
    }

    if (category.resolved) {
      return 'Resolved';
    }

    if (category.recurring) {
      return 'Recurring';
    }

    return 'Untested';
  }

  @action
  handleExpandFilesOverview() {
    this.expandFilesOverview = !this.expandFilesOverview;

    scrollDashboardMainContainerTo({ top: 0, behavior: 'smooth' });
  }

  get fileAnalyses() {
    return [this.file1Analysis, this.file2Analysis];
  }
}

declare module '@glint/environment-ember-loose/registry' {
  export default interface Registry {
    'FileCompare::VulnerabilityDetails': typeof FileCompareVulnerabilityDetailsComponent;
  }
}
