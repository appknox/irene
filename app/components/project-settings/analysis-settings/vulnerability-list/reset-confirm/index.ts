import Component from '@glimmer/component';
import { inject as service } from '@ember/service';
import IntlService from 'ember-intl/services/intl';

import { AnalysisRiskDataModel } from 'irene/components/analysis-risk/override-edit-drawer';

export interface ProjectSettingsAnalysisSettingsVulnerabilityListResetConfirmSignature {
  Args: {
    dataModel: AnalysisRiskDataModel;
    resetHandler: (all?: boolean) => void;
    resetCancelHandler?: () => void;
    isResetRunning: boolean;
    isResetSuccess: boolean;
  };
}

export default class ProjectSettingsAnalysisSettingsVulnerabilityListResetConfirmComponent extends Component<ProjectSettingsAnalysisSettingsVulnerabilityListResetConfirmSignature> {
  @service declare intl: IntlService;

  get resetActionBtnDetails() {
    return [
      {
        label: this.intl.t('yes'),
        action: () => this.args.resetHandler(false),
      },
      {
        variant: 'outlined' as const,
        label: this.intl.t('cancel'),
        color: 'neutral' as const,
        action: () => this.args.resetCancelHandler?.(),
      },
    ];
  }
}

declare module '@glint/environment-ember-loose/registry' {
  export default interface Registry {
    'project-settings/analysis-settings/vulnerability-list/reset-confirm': typeof ProjectSettingsAnalysisSettingsVulnerabilityListResetConfirmComponent;
  }
}
