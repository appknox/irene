<Sbom::EmptyLoadingView
  @empty={{this.hasNoSbomComponent}}
  @loading={{this.isLoading}}
  @tree={{if this.isFilteredTree 'filtered' 'full'}}
  @skeleton={{true}}
  @loadingSvgHeight='200px'
  @height={{if this.isFilteredTree '200px' '500px'}}
>
  <:emptySvg>
    <AkSvg::NoResult data-test-sbomComponent-emptySvg />
  </:emptySvg>

  <:emptyText>
    <AkStack class='mt-2' @direction='column' @alignItems='center' @spacing='1'>
      <AkTypography data-test-sbomComponent-emptyTextTitle @variant='h5'>
        {{t 'sbomModule.componentListEmptyText.title'}}
      </AkTypography>

      <AkTypography
        data-test-sbomComponent-emptyTextDescription
        {{style width='600px'}}
        @color='textSecondary'
        @align='center'
      >
        {{t 'sbomModule.componentListEmptyText.description'}}
      </AkTypography>
    </AkStack>
  </:emptyText>

  <:default>
    <AkStack
      id='component-tree-container'
      @width='full'
      @direction='column'
      local-class='component-tree-container'
      data-test-component-tree
    >
      <AkStack
        @width='full'
        @alignItems='center'
        @spacing='1'
        local-class='tree-package-name-container'
      >
        <AkIcon @iconName='arrow-drop-down' @color='secondary' />

        <div local-class='tree-connector-parent-line' />

        <AkTypography local-class='tree-label' @variant='h6'>
          {{@packageName}}
        </AkTypography>
      </AkStack>

      <AkTree
        @treeData={{@treeNodes}}
        @expanded={{@expandedNodes}}
        @onExpand={{perform this.handleNodeExpand}}
        @checked={{@expandedNodes}}
        @onCheck={{perform this.handleNodeExpand}}
        as |node tree|
      >
        <div local-class='main-tree'>
          <AkStack
            id={{this.calculateNodeContainerId node.key}}
            @alignItems='center'
            @width='full'
            local-class='tree-node {{if
              (or node.dataObject.hasNextSibling this.hasMoreComponents)
              ""
              "last-node"
            }}'
            @spacing='2'
            data-test-component-tree-node
          >
            <AkStack @alignItems='center' local-class='tree-action-container'>
              {{#if node.dataObject.isDependency}}
                {{#each (this.depthArray node)}}
                  <div
                    local-class='space {{if
                      (this.addMargin
                        node.treeDepth
                        (or
                          node.parent.dataObject.hasNextSibling
                          node.hasParentSibling
                        )
                      )
                      "margin"
                    }}'
                  />
                {{/each}}
              {{/if}}

              {{#if node.dataObject.hasChildren}}
                <AkIconButton
                  local-class='expand-icon'
                  @size='small'
                  disabled={{this.loadChildrenAndTransform.isRunning}}
                  {{style left=(this.calculateMargin node.treeDepth)}}
                  {{on 'click' (fn tree.onExpand node)}}
                >
                  {{#if node.expanded}}
                    <AkIcon
                      data-test-component-tree-nodeCollapseIcon
                      @iconName='indeterminate-check-box'
                    />
                  {{else}}
                    <AkIcon
                      data-test-component-tree-nodeExpandIcon
                      @iconName='add-box'
                    />
                  {{/if}}
                </AkIconButton>
              {{/if}}

              <div local-class='tree-connectors' />
            </AkStack>

            <AkButton
              @variant='text'
              local-class='{{if
                node.dataObject.isHighlighted
                "tree-label-highlighted"
              }}'
              {{on
                'click'
                (perform this.handleComponentClick node node.parent.key)
              }}
            >
              <AkTypography
                local-class='tree-label {{if
                  node.dataObject.isHighlighted
                  "tree-label-highlighted-text"
                }}'
                @underline='hover'
                data-test-component-tree-nodeLabel
              >
                {{node.dataObject.bomRef}}&nbsp;:&nbsp;{{node.label}}
              </AkTypography>
            </AkButton>

            <Sbom::ComponentStatus
              @sbomComponent={{node.dataObject.originalComponent}}
            />

            {{#if node.dataObject.isHighlighted}}
              <AkStack local-class='highlighted-return-icon-container'>
                <AkIcon
                  data-test-component-tree-returnIcon
                  @iconName='keyboard-return'
                  @size='small'
                  local-class='highlighted-return-icon'
                />
              </AkStack>
            {{/if}}
          </AkStack>

          {{#if node.dataObject.isDependency}}
            {{#unless node.dataObject.hasNextSibling}}
              <AkStack class='ml-6' @alignItems='center' @spacing='2'>
                {{#if (this.shouldShowViewMoreForChild node)}}
                  <AkButton
                    @variant='text'
                    @color='secondary'
                    @underline='always'
                    @typographyFontWeight='medium'
                    {{on
                      'click'
                      (fn this.handleLoadMoreChildren node.parent.key)
                    }}
                  >
                    <:default>{{t 'viewMore'}}</:default>
                    <:rightIcon>
                      <AkIcon @iconName='arrow-downward' />
                    </:rightIcon>
                  </AkButton>
                {{/if}}

                {{#if
                  (this.isNodeScrollable
                    node.parent.key node.parent.dataObject.dependencyCount
                  )
                }}
                  <AkButton
                    @variant='text'
                    @color='secondary'
                    @underline='always'
                    @typographyFontWeight='medium'
                    {{on 'click' (fn this.scrollToParent node.parent.key)}}
                  >
                    <:default>{{t 'goToParent'}}</:default>
                    <:rightIcon><AkIcon @iconName='arrow-upward' /></:rightIcon>
                  </AkButton>
                {{/if}}
              </AkStack>
            {{/unless}}
          {{/if}}

          {{#if (this.isLoadingChildren node.dataObject.originalComponent.id)}}
            <AkStack
              data-test-component-tree-child-loader
              @direction='column'
              @spacing='1'
              class='my-1'
              {{style marginLeft=(this.calculateLoaderMargin node.treeDepth)}}
            >
              <AkSkeleton class='p-1' @width='600px' @height='16px' />
              <AkSkeleton class='p-1' @width='600px' @height='16px' />
            </AkStack>
          {{/if}}
        </div>
      </AkTree>

      {{#if this.isLoadingMore}}
        <AkStack @direction='column' @spacing='1' class='my-1 ml-6'>
          <AkSkeleton class='p-1' @width='600px' @height='16px' />
          <AkSkeleton class='p-1' @width='600px' @height='16px' />
          <AkSkeleton class='p-1' @width='600px' @height='16px' />
        </AkStack>
      {{else}}
        <AkStack class='ml-3 my-2' @alignItems='center' @spacing='2'>
          {{#if this.hasMoreComponents}}
            <AkButton
              @variant='text'
              @color='secondary'
              @underline='always'
              @typographyFontWeight='medium'
              {{on 'click' this.handleLoadMoreAction}}
            >
              <:default>{{t 'viewMore'}}</:default>
              <:rightIcon><AkIcon @iconName='arrow-downward' /></:rightIcon>
            </AkButton>
          {{/if}}

          {{#if this.isScrollable}}
            <AkButton
              @variant='text'
              @color='secondary'
              @underline='always'
              @typographyFontWeight='medium'
              {{on 'click' this.scrollToTop}}
            >
              <:default>{{t 'goToTop'}}</:default>
              <:rightIcon><AkIcon @iconName='arrow-upward' /></:rightIcon>
            </AkButton>
          {{/if}}
        </AkStack>
      {{/if}}
    </AkStack>
  </:default>
</Sbom::EmptyLoadingView>