import Component from '@glimmer/component';
import { action } from '@ember/object';
import { guidFor } from '@ember/object/internals';
import { service } from '@ember/service';
import type ClipboardJS from 'clipboard/src/clipboard';
import type IntlService from 'ember-intl/services/intl';

export interface FileDetailsVulnerabilityAnalysisDetailsFindingsCodeBoxSignature {
  Args: {
    title: string;
    copyIcon?: boolean;
    markedAsPassed?: boolean;
  };
  Blocks: {
    default: [];
  };
}

export default class FileDetailsVulnerabilityAnalysisDetailsFindingsCodeBoxComponent extends Component<FileDetailsVulnerabilityAnalysisDetailsFindingsCodeBoxSignature> {
  @service('notifications') declare notify: NotificationService;
  @service declare intl: IntlService;

  get copyTargetId() {
    return `copy-target-${guidFor(this)}`;
  }

  @action
  handleCopySuccess(event: ClipboardJS.Event) {
    this.notify.info(this.intl.t('copiedToClipboard'));

    event.clearSelection();
  }

  @action
  handleCopyError() {
    this.notify.error(this.intl.t('failedToCopy'));
  }
}

declare module '@glint/environment-ember-loose/registry' {
  export default interface Registry {
    'FileDetails::VulnerabilityAnalysisDetails::Findings::CodeBox': typeof FileDetailsVulnerabilityAnalysisDetailsFindingsCodeBoxComponent;
    'file-details/vulnerability-analysis-details/findings/code-box': typeof FileDetailsVulnerabilityAnalysisDetailsFindingsCodeBoxComponent;
  }
}
