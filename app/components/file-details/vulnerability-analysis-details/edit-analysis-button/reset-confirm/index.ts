import Component from '@glimmer/component';
import { inject as service } from '@ember/service';
import IntlService from 'ember-intl/services/intl';
import { action } from '@ember/object';
import { tracked } from '@glimmer/tracking';

import { AnalysisRiskDataModel } from 'irene/components/analysis-risk/override-edit-drawer';
import AnalysisModel from 'irene/models/analysis';
import ENUMS from 'irene/enums';

export interface FileDetailsVulnerabilityAnalysisDetailsEditAnalysisResetConfirmSignature {
  Args: {
    dataModel: AnalysisRiskDataModel;
    resetHandler: (all?: boolean) => void;
    resetCancelHandler: () => void;
    isResetRunning: boolean;
    isResetSuccess: boolean;
  };
}

export default class FileDetailsVulnerabilityAnalysisDetailsEditAnalysisResetConfirmComponent extends Component<FileDetailsVulnerabilityAnalysisDetailsEditAnalysisResetConfirmSignature> {
  @service declare intl: IntlService;
  @service('notifications') declare notify: NotificationService;

  @tracked successMessage = '';

  get analysis() {
    return this.args.dataModel.model as AnalysisModel;
  }

  get isLatestFile() {
    return (
      this.analysis.file.get('project')?.get('lastFileId')?.get('id') ===
      this.analysis.file.get('id')
    );
  }

  get showCurrentAndFutureResetActions() {
    return (
      this.isLatestFile &&
      this.analysis.overrideCriteria ===
        ENUMS.ANALYSIS_OVERRIDE_CRITERIA.ALL_FUTURE_UPLOAD
    );
  }

  get confirmTitle() {
    return this.showCurrentAndFutureResetActions
      ? this.intl.t(
          'fileAnalysisDetails.currentFileResetOrRemoveOverrideConfirmTitle'
        )
      : this.intl.t('fileAnalysisDetails.currentFileResetConfirmTitle');
  }

  get resetActionBtnDetails() {
    if (this.showCurrentAndFutureResetActions) {
      return [
        {
          variant: 'outlined' as const,
          label: this.intl.t('fileAnalysisDetails.resetForTheCurrentFile'),
          color: 'neutral' as const,
          action: this.handleResetForCurrentFile,
        },
        {
          label: this.intl.t('fileAnalysisDetails.removeOverride'),
          action: this.handleRemoveOverride,
        },
      ];
    }

    return [
      {
        label: this.intl.t('yes'),
        action: this.handleResetForCurrentFile,
      },
      {
        variant: 'outlined' as const,
        label: this.intl.t('cancel'),
        color: 'neutral' as const,
        action: this.args.resetCancelHandler,
      },
    ];
  }

  @action
  handleResetForCurrentFile() {
    this.successMessage = this.intl.t(
      'fileAnalysisDetails.currentFileResetSuccessMessage'
    );

    this.args.resetHandler(false);
  }

  @action
  handleRemoveOverride() {
    this.successMessage = this.intl.t(
      'fileAnalysisDetails.removeOverrideSuccessMessage'
    );

    this.args.resetHandler(true);
  }
}

declare module '@glint/environment-ember-loose/registry' {
  export default interface Registry {
    'file-details/vulnerability-analysis-details/edit-analysis-button/reset-confirm': typeof FileDetailsVulnerabilityAnalysisDetailsEditAnalysisResetConfirmComponent;
  }
}
