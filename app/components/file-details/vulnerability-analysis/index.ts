import Component from '@glimmer/component';
import { tracked } from '@glimmer/tracking';
import { action } from '@ember/object';
import type { EmberTableSort } from 'ember-table';

import type FileModel from 'irene/models/file';
import ENUMS from 'irene/enums';

export interface FileDetailsVulnerabilityAnalysisSignature {
  Args: {
    file: FileModel;
  };
}

const DEFAULT_ANALYSES_SORTS = [
  { isAscending: false, valuePath: 'computedRisk' },
];

export default class FileDetailsVulnerabilityAnalysisComponent extends Component<FileDetailsVulnerabilityAnalysisSignature> {
  @tracked filterVulnerabilityType: string | number =
    ENUMS.VULNERABILITY_TYPE.UNKNOWN;

  @tracked sorts = DEFAULT_ANALYSES_SORTS;

  get file() {
    return this.args.file;
  }

  @action
  setVulnerabilityType(type: string | number) {
    this.filterVulnerabilityType = type;

    this.resetSorts();
  }

  @action
  resetSorts() {
    this.sorts = DEFAULT_ANALYSES_SORTS;
  }

  @action
  updateAnalysesSorts(sorts: EmberTableSort[]) {
    this.sorts = sorts;
  }
}

declare module '@glint/environment-ember-loose/registry' {
  export default interface Registry {
    'FileDetails::VulnerabilityAnalysis': typeof FileDetailsVulnerabilityAnalysisComponent;
  }
}
