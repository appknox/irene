import Component from '@glimmer/component';
import type { Task } from 'ember-concurrency';
import type FileModel from 'irene/models/file';

export interface FileDetailsApiScanCapturedApiHeaderSignature {
  Args: {
    file: FileModel;
    allAPIsSelected: boolean;
    selectAllCapturedApis: Task<unknown, [boolean]>;
    noDomainFilterResults: boolean;
    projectProfileApiFilters: string[];
    autoGeneratedApiFilters: string[];
    selectedAPIUrlDomain: string[];
    handleSelectAllCapturedApis: (event: Event, checked: boolean) => void;
    onDomainFilterApply: (domainFilters: string[]) => void;
    isLoadingCapturedApis: boolean;
  };
}

export default class FileDetailsApiScanCapturedApiHeaderComponent extends Component<FileDetailsApiScanCapturedApiHeaderSignature> {
  get disableSelectAllCapturedApis() {
    return (
      this.args.noDomainFilterResults ||
      this.args.selectAllCapturedApis.isRunning
    );
  }
}

declare module '@glint/environment-ember-loose/registry' {
  export default interface Registry {
    'FileDetails::ApiScan::CapturedApis::Header': typeof FileDetailsApiScanCapturedApiHeaderComponent;
  }
}
