if hasProjects
  .column
    .project-container
      .columns
        .column.is-one-quarter
          h5.margin-top.margin-bottom0
            | PROJECTS (#{projects.meta.count})
        .column.is-one-quarter
          .margin-top
            = input class="input mp-search-query" placeholder=(t 'searchQuery') value=query
        .column
        .column.is-one-sixth.margin-top
          select{action 'filterPlatform' on='change'} id="project-filter-platform" class="input"
            option value="-1"
              = t "allPlatforms"
            each platformObjects as |platformObject|
              option value=platformObject.value
                = platformObject.key

      table.project-table
        tr
          th.margin-top5 colspan="2" click="sortByFileName"
            | File &nbsp;
            if sortFileAscending
                i.fa.fa-sort-down.sort-icons.margin-top5
            else
              i.fa.fa-sort-up.sort-icons.margin-top5
          th
            | Package Name
          th click="sortByStartDate"
            | Start Date &nbsp;
            if sortStartDateAscending
              i.fa.fa-sort-down.sort-icons.margin-top5
            else
              i.fa.fa-sort-up.sort-icons.margin-top5
          th
            | Platform

        if hasObjects
          each sortedObjects as |project|
            = project-overview project=project

      if hasObjects
        .margin-top20
          = partial "paginate"

else
  .column.is-fullwidth.no-project-container
    .no-project
      h4.capitalize-text
        | #{t "noProject"}!!
      h5
        = t "noProjectUploaded"
      h6
        = t "uploadNewProject"
