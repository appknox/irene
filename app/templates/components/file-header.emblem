table.project-table.margin-top20
  tr
    td.border-right-width.text-left
      .columns
        .column.file-icon.no-padding.file-icon-bigger
          img src=file.iconUrl alt=file.name
        .column
          ul.file-header-details
            li
              h4
                = file.name
            li
              h5
                = file.project.packageName
            li
              if file.version
                span.file-heading
                  | version &nbsp;
                span.file-info.hidden-overflow
                  | #{file.version}
              if file.versionCode
                span.file-seperator
                span.file-heading
                  | version code &nbsp;
                span.file-info.hidden-overflow
                  | #{file.versionCode}
                span.file-seperator
                span.file-info.hidden-overflow
                  | #{moment-from-now file.createdOn}
                  small
                    | &nbsp; #{file.createdOnDateTime}

        .column.is-one-sixth
          .columns
            .column.content-right.no-padding
              .file-id-text.file-id-text2
                | FILE ID - #{file.id}
          .columns
            .column
              .text-right.margin-right
                = fa-icon file.project.platformIconClass class="platform-icon"

  tr
    td.project-details.padding-bottom0 colspan=6
      .columns.border-card
        .column.no-padding.is-half
          .tabs.is-medium.is-boxed.file-details-tab
            ul
              li class=scanDetailsClass
                a click="displayScanDetails" class="uppercase-text"
                  = t "scanDetails"
              li class=owaspDetailsClass
                a click="displayOWASPDetails" class="uppercase-text"
                  | Owasp Details
              li class=fileTagsClass
                a click="displayFileTags" class="uppercase-text"
                  | File Tags
        .column.margin-top3.text-right.no-padding.is-one-sixth
          if organization.selected.isTrial
              button.is-primary.margin-top20.project-button click={(perform openRequestAccessModal)}
                = fa-icon "download"
                | &nbsp; Report
          else
            button.mp-pdf-report.project-button click="getPDFReportLink" disabled=isDownloadingReport
              if isDownloadingReport
                .fa-font-size
                  i.fa class="fa-spinner fa-spin"
                  | &nbsp;
              else
                = fa-icon "download"
              | &nbsp; Report
        .column.is-one-third.no-padding.margin-top3
          = copy-password pdfPassword=file.project.pdfPassword

      if isScanDetails
        .columns.flex-center
          .column.is-one-quarter
            = ember-chart type='doughnut' data=file.doughnutData width=150 height=150 options=chartOptions
          .column.is-one-quarter.card-content
            ul.risk-table
              .risk-values.text-left
                .columns
                  .column
                    li.is-critical
                      = t "critical"
                  .column
                    = file.riskCountCritical
                .columns
                  .column
                    li.is-danger
                      = t "high"
                  .column
                    = file.riskCountHigh
                .columns
                  .column
                    li.is-warning
                      = t "medium"
                  .column
                    = file.riskCountMedium
                .columns
                  .column
                    li.is-info
                      = t "low"
                  .column
                    = file.riskCountLow
                .columns
                  .column
                    li.is-success
                      = t "none"
                  .column
                    = file.riskCountPassed
                .columns class=unknownAnalysisStatus.status:visible:invisible
                  .column
                    li.is-default
                      = t "untested"
                  .column
                    = file.riskCountUnknown
          .column.margin-top
            .columns.scan-status-box
              .column.is-one-third
                h6.margin-top5 = t "staticScan"
              .column
                if file.isStaticCompleted
                  button.is-primary disabled="disabled"
                    | #{t "completed"} &nbsp;
                    = fa-icon "fa-check"

                  button.is-primary.margin-left5.ac-static-rescan click="openRescanModal"
                    .fa-font-size-small
                      = fa-icon "fa-repeat"
                else
                  button.is-primary.is-progress disabled="disabled"
                    | #{t "scanning"} : #{file.staticScanProgress}
                    | %

            = dynamic-scan file=file notVNCViewer=true dynamicScanText=(t 'start')

            .columns.scan-status-box
              .column.is-one-third
                h6.margin-top5 = t "manualScan"

              .column
                if file.isManualRequested
                  button.is-primary disabled="disabled"
                    if file.isManualDone
                      = fa-icon "fa-check"
                      | &nbsp; #{t "completed"}

                    else
                      = fa-icon "fa-clock-o"
                      | &nbsp; #{t "requested"}

                else
                  if organization.selected.isTrial
                      button.is-primary click={(perform openRequestAccessModal)}
                        .fa-font-size
                          = fa-icon "fa-play"
                        | &nbsp; #{t "start"}
                  else
                    button.is-primary.ac-request-manual-scan click="openManualScanModal"
                      .fa-font-size
                        = fa-icon "fa-play"
                      | &nbsp; #{t "start"}

      if isOWASPDetails
        .align-center.margin-bottom
          = ember-chart type='bar' data=owaspData.mobile width=320 height=200 options=barChartOptions

          = ember-chart type='bar' data=owaspData.web width=320 height=200 options=barChartOptions
      if isFileTags
        = file-tags file=file
      .columns.footer-card
        .column.text-left.no-padding.margin-top
          if file.tags
            .file-tag-container
              each file.tags as |tag|
                .file-tag style="background-color:{{tag.color}};color:{{tag.invertedColor}}"
                  = tag.name
        .column.content-right.no-padding.margin-top.margin-bottom
          = project-actions project=file.project
= modal-card isActive=showRequestAccessModal title=(t "modalCard.requestAccess.title")
  h5
   = t "modalCard.requestAccess.description"
  .columns
    .column.is-one-third
      button.modal-button.is-primary click={(perform requestAccess)}
        =  t "modalCard.requestAccess.button"
    .column
      button.modal-button.is-primary click={(perform closeRequestAccessModal)}
        = t "cancel"
= modal-card isActive=showManualScanModal title=(t "modalCard.manual.title") class="manual-scan-modal"
  h5
   = t "modalCard.manual.description"
  ul
    li
      a click="displayAppInfo"
        .columns
          .column.is-one-quarter
            | #{t "modalCard.manual.basicAppInfo"} &nbsp;
          .column.content-right
            if isBasicInfo
              = fa-icon "chevron-up"
            else
              = fa-icon "chevron-down"
    if isBasicInfo
        .modal-sub-container
          .columns
            .column
              = t "modalCard.manual.appEnv"
            .column
              select.select{action 'selectAppEnvironment' on='change'} id="app-env"
                option selected="true" value=manualscan.filteredAppEnv
                  | #{ t (app-environment manualscan.filteredAppEnv)}
                each filteredEnvironments as |env|
                  option value=env.value
                    | #{ t (app-environment env.value)}
          .columns
            .column
              = t "modalCard.manual.minOSVersion"
            .column
              = input class="input" placeholder=(t "modalCard.manual.minOSVersion") type="text" value=manualscan.minOsVersion
          .columns
            .column
              = t "modalCard.manual.appQuestion1"
            .column
              select.select{action 'requiredAppAction' on='change'} id="required-app-action"
                option selected="true" value=manualscan.filteredAppAction
                  | #{ t (app-action manualscan.filteredAppAction)}
                each filteredAppActions as |appAction|
                  option value=appAction.value
                    | #{ t (app-action appAction.value)}
              .margin-top
                small
                  if manualscan.showProceedText
                    = t "modalCard.manual.appQuestion1Answer1"
                  else if manualscan.showHaltText
                    = t "modalCard.manual.appQuestion1Answer2"

          .columns
            .column
              = t "modalCard.manual.poc"
            .column
              = input class="input" type="name" value=manualscan.contact.name placeholder=(t "name")
              = input class="input margin-top" type="email" value=manualscan.contact.email placeholder=(t "email")

    li
      a click="displayLoginDetails"
        .columns
          .column.is-one-quarter
            | #{t "modalCard.manual.loginDetails"} &nbsp;
          .column.content-right
            if isLoginDetails
              = fa-icon "chevron-up"
            else
              = fa-icon "chevron-down"
    if isLoginDetails
      .modal-sub-container
        .columns
          .column
            = t "modalCard.manual.loginRequired"
          .column
            select.select{action 'loginRequired' on='change'} id="app-login-required"
              if manualscan.loginStatus
                option selected="true" value=manualscan.loginStatus
                  | #{ t manualscan.loginStatus}
              each filteredLoginStatuses as |status|
                option value=status
                  | #{ t status}
        if manualscan.loginRequired
          .user-roles
            h6.margin-top
               = t "modalCard.manual.enterLoginDetails"
            .columns.no-border-column
              .column
                form.columns.no-border-column
                  .column.is-one-third
                    = input class="input userrole" type="name" value=newUserRole placeholder=(t "role")
                  .column.is-one-third
                    = input class="input" type="name" value=username autocomplete="new-user" placeholder=(t "username")
                  .column.is-one-third
                    = input class="input password" type="password" value=password autocomplete="new-password" placeholder=(t "password")
                  button.modal-button.is-primary.uppercase-text.margin-left click="addUserRole"
                    = t "modalCard.manual.addUserRole"
            if hasUserRoles
              .column
                table.user-roles-table
                  tr
                    th.uppercase-text
                      = t "modalCard.manual.userRoles"
                    th.uppercase-text
                      = t "modalCard.manual.actions"
                  each allUserRoles as |userRole|
                    tr
                      td
                        .columns
                          .column.text-centre.lowercase-text
                            .tag
                              = userRole.role
                        .columns.table-head
                          .column.lowercase-text
                            | #{t "username"}
                          .column.lowercase-text
                            | #{t "password"}

                        .columns.no-border-column
                          .column
                            = userRole.username
                          .column
                            = userRole.password
                      td
                        .tag.delete-tag.margin-top3.remove click="'openRemoveUserRoleConfirmBox' userRole.id"
                          i.fa.risk-icons.fa-trash-o
                            | &nbsp; #{t "remove"}
    li
      a click="displayVPNDetails"
        .columns
          .column.is-one-quarter
            | #{t "modalCard.manual.vpnDetails"} &nbsp;
          .column.content-right
            if isVPNDetails
              = fa-icon "chevron-up"
            else
              = fa-icon "chevron-down"
    if isVPNDetails
      .modal-sub-container
        .columns
          .column
            = t "modalCard.manual.vpnRequired"
          .column
            select.select{action 'vpnRequired' on='change'} id="vpn-required"
              if manualscan.vpnStatus
                option selected="true" value=manualscan.vpnStatus
                  | #{ t manualscan.vpnStatus}
              each filteredVpnStatuses as |status|
                option value=status
                  | #{ t status}
        if manualscan.vpnRequired
          h6.margin-top
            = t "modalCard.manual.enterVPNDetails"
            .columns.no-border-column
              .column
                form.columns.no-border-column
                  .column.is-one-third
                      = input class="input" type="name" placeholder=(t "modalCard.manual.vpnAddress") value=manualscan.vpnDetails.address autocomplete="new-address"
                  .column.is-one-third
                    = input class="input" type="name" placeholder=(t "modalCard.manual.vpnPort") value=manualscan.vpnDetails.port autocomplete="new-port"
                  h6.margin-left.margin-top.margin-bottom0
                    = t "modalCard.manual.enterCredentails"
                  .column.is-one-third
                    = input class="input" type="name" value=manualscan.vpnDetails.username autocomplete="new-username" placeholder=(t "username")
                  .column.is-one-third
                    = input class="input" type="password" value=manualscan.vpnDetails.password  autocomplete="new-password" placeholder=(t "password")
    li
      .columns
        .column
          .default-text.margin-left
            = t "modalCard.manual.additionalComments"
        .column.margin-right
          = textarea class="input text-area" type="name" value=manualscan.additionalComments
  .columns
    .column.flex-center.margin-top50
      button.modal-button.is-primary click="saveManualScanForm" disabled=isRequestingManual
        = t "modalCard.manual.title"

      button.modal-button.is-primary.margin-left click="closeManualScanModal"
        = t "cancel"

= modal-card isActive=showRescanModal title=(t "modalCard.rescan.title")
  h5
   = t "modalCard.rescan.description"
  .columns
    .column.is-one-sixth
      button.modal-button.is-primary click="rescanApp" disabled=isStartingRescan
        =  t "yes"
    .column
      button.modal-button.is-primary click="closeRescanModal"
        = t "no"

= modal-card isActive=showCopyPasswordModal title=(t "modalCard.copyPassword.title") class="copy-password-modal"
  = copy-password pdfPassword=file.project.pdfPassword

= confirm-box isActive=showRemoveRoleConfirmBox title=(t "confirmBox.removeUserRole") delegate=this
