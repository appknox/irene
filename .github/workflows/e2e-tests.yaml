name: E2E Test
on:
  push:
    branches:
      - main
      - master

  pull_request:
    types: [opened, reopened, ready_for_review]

  workflow_dispatch:
    inputs:
      setupJSON:
        description: 'Setup JSON'

concurrency:
  group: ${{ github.repository }}-concurrency-for-e2e
  cancel-in-progress: false

jobs:
  e2e-tests:
    name: Run E2E Tests
    runs-on: [ubuntu-latest]
    container:
      image: cypress/browsers:node-20.12.0-chrome-123.0.6312.86-1-ff-124.0.2-edge-123.0.2420.65-1
      options: --user 1001

    permissions:
      contents: read
      deployments: write

    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Application
        uses: ./.github/actions/setup-app

      - name: Cache cypress binary
        id: cacheCypressBinary
        uses: actions/cache@v4
        with:
          path: /root/.cache/Cypress
          key: ${{ runner.os }}-cypressBinary-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cypressBinary-

      - name: Install cypress binary
        if: steps.cacheCypressBinary.outputs.cache-hit != 'true'
        run: npx cypress install

      - name: Cypress run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_TEST_USERNAME: ${{ fromJSON(github.event.inputs.setupJSON).username || secrets.CYPRESS_TEST_USERNAME }}
          CYPRESS_TEST_PASSWORD: ${{ fromJSON(github.event.inputs.setupJSON).password || secrets.CYPRESS_TEST_PASSWORD }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_TEST_RECORD_ID}}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_TEST_PROJECT_ID }}
          CYPRESS_DYNAMIC_SCAN_SYSTEM_APK_FILE_ID: ${{ fromJSON(github.event.inputs.setupJSON).dynamicScanSystemApkFileId || vars.CYPRESS_DYNAMIC_SCAN_SYSTEM_APK_FILE_ID }}
          CYPRESS_DYNAMIC_SCAN_SYSTEM_IPA_FILE_ID: ${{ fromJSON(github.event.inputs.setupJSON).dynamicScanSystemIpaFileId || vars.CYPRESS_DYNAMIC_SCAN_SYSTEM_IPA_FILE_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IRENE_API_HOST: ${{ fromJSON(github.event.inputs.setupJSON).apiHost || 'https://api.appknox.com' }}
        with:
          start: npx ember serve
          browser: chrome
          install: false
          config: pageLoadTimeout=100000
          wait-on: 'http://localhost:4200'
          record: true
          parallel: true
