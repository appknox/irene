import { render } from '@ember/test-helpers';
import { hbs } from 'ember-cli-htmlbars';
import { setupIntl, t } from 'ember-intl/test-support';
import { setupRenderingTest } from 'ember-qunit';
import { module, test } from 'qunit';

module(
  'Integration | Component | vulnerability-analysis-details/finding-code-box',
  function (hooks) {
    setupRenderingTest(hooks);
    setupIntl(hooks);

    const description1 =
      "\n    Connection: keep-alive\n    Content-Length: '0'\n    Date: Mon, 15 Jul 2024 19:29:23 GMT\n    Server: AppleHttpServer/b866cf47a603\n    X-Apple-Edge-Response-Time: '0'\n    X-Apple-Filtered-At-Edge: 'true'\n    X-Apple-Request-UUID: 554eb993-6fe7-4364-adf6-56117e77af73\n    access-control-expose-headers: X-Apple-Request-UUID,Via\n ";

    const description2 = 'reason: Unauthorized\n  status_code: 401\n';

    test.each(
      'it renders code box for findings and checks analysis-overridded-passed class',
      [
        {
          getTitle: () => t('requestParameters'),
          copyIcon: true,
          description: description1,
          markedAsPassed: true,
        },
        {
          getTitle: () => t('responseHeaders'),
          copyIcon: false,
          description: description2,
          markedAsPassed: false,
        },
      ],
      async function (
        assert,
        { getTitle, copyIcon, description, markedAsPassed }
      ) {
        this.set('description', description);
        this.set('title', getTitle());
        this.set('copyIcon', copyIcon);
        this.set('markedAsPassed', markedAsPassed);

        await render(hbs`
        <FileDetails::VulnerabilityAnalysisDetails::Findings::CodeBox
            @title={{this.title}}
            @copyIcon={{this.copyIcon}}
            @markedAsPassed={{this.markedAsPassed}}
          >
            {{this.description}}
          </FileDetails::VulnerabilityAnalysisDetails::Findings::CodeBox>
        `);

        assert.dom('[data-test-analysisDetails-vulFinding-codeBox]').exists();

        assert
          .dom('[data-test-analysisDetails-vulFinding-codeTitle]')
          .hasText(`${this.title}:`);

        assert
          .dom('[data-test-analysisDetails-vulFinding-code]')
          .hasText(this.description);

        if (this.copyIcon) {
          assert
            .dom('[data-test-analysisDetails-vulFinding-code-copyBtn]')
            .hasAttribute('data-clipboard-target', /^#copy-target/);
        } else {
          assert
            .dom('[data-test-analysisDetails-vulFinding-code-copyBtn]')
            .doesNotExist();
        }

        if (this.markedAsPassed) {
          assert
            .dom('[data-test-analysisDetails-vulFinding-codeBox]')
            .hasClass(/analysis-overridded-passed/);
        } else {
          assert
            .dom('[data-test-analysisDetails-vulFinding-codeBox]')
            .doesNotHaveClass(/analysis-overridded-passed/);
        }
      }
    );
  }
);
